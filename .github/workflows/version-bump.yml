name: Version Bump

on:
  push:
    branches: [ main ]
    paths:
      - 'mcp_chart_scanner/**'
      - 'tests/**'
      - 'pyproject.toml'
      - '!**/*.md'
      - '!docs/**'

jobs:
  bump-version:
    name: Bump Patch Version
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(release)')"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml
      - name: Bump patch version
        id: bump
        run: |
          # Get current version
          CURRENT_VERSION=$(grep -m 1 'version = ' pyproject.toml | cut -d '"' -f 2)
          echo "Current version: $CURRENT_VERSION"

          # Split version into major, minor, patch
          MAJOR=$(echo $CURRENT_VERSION | cut -d '.' -f 1)
          MINOR=$(echo $CURRENT_VERSION | cut -d '.' -f 2)
          PATCH=$(echo $CURRENT_VERSION | cut -d '.' -f 3)

          # Increment patch
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="$MAJOR.$MINOR.$NEW_PATCH"
          echo "New version: $NEW_VERSION"

          # Update pyproject.toml
          sed -i "s/version = \"$CURRENT_VERSION\"/version = \"$NEW_VERSION\"/" pyproject.toml

          # Set outputs
          echo "old_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
      - name: Commit and push changes
        run: |
          git config --local user.email "devin-ai-integration[bot]@users.noreply.github.com"
          git config --local user.name "Devin AI"
          git add pyproject.toml
          git commit -m "chore(release): bump version ${{ steps.bump.outputs.old_version }} â†’ ${{ steps.bump.outputs.new_version }}"
          git push
